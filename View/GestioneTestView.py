# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GestioneTestView.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import * 
from View.AggiungiTestView import AggiungiTestView
from View.ModificaTestView import ModificaTestView
from Controller.ControllerPickle import ControllerPickle
from Controller.ControllerTest import ControllerTest

class GestioneTestView(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 800)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.aggiungiTestButton = QtWidgets.QPushButton(self.centralwidget)
        self.aggiungiTestButton.setGeometry(QtCore.QRect(600, 170, 150, 30))
        self.aggiungiTestButton.setObjectName("aggiungiTestButton")
        self.aggiungiTestButton.clicked.connect(self.goToAggiungiTestView)

        self.label1 = QtWidgets.QLabel(self.centralwidget)
        self.label1.setGeometry(QtCore.QRect(0, 10, 351, 121))
        font = QtGui.QFont()
        font.setPointSize(36)
        self.label1.setFont(font)
        self.label1.setAcceptDrops(False)
        self.label1.setWordWrap(True)
        self.label1.setObjectName("label1")

        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(20, 210, 731, 561))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
    
        self.cercaButton = QtWidgets.QPushButton(self.centralwidget)
        self.cercaButton.setGeometry(QtCore.QRect(380, 170, 75, 30))
        self.cercaButton.setObjectName("cercaButton")
        self.searchBarInput = QtWidgets.QLineEdit(self.centralwidget)
        self.searchBarInput.setGeometry(QtCore.QRect(20, 170, 350, 30))
        self.searchBarInput.setObjectName("searchBarInput")
        self.profiloButton = QtWidgets.QToolButton(self.centralwidget)
        self.profiloButton.setGeometry(QtCore.QRect(650, 30, 101, 71))
        self.profiloButton.setObjectName("profiloButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.aggiungiTestButton.setText(_translate("MainWindow", "Aggiungi Test"))
        self.label1.setText(_translate("MainWindow", "Benvenuto in Typing Trainer!"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "ID"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Nome"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Data Creazione"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Modifica"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Elimina"))
        self.cercaButton.setText(_translate("MainWindow", "Cerca"))
        self.searchBarInput.setText(_translate("MainWindow", ""))
        self.searchBarInput.setPlaceholderText(_translate("MainWindow", "Inserisci ID oppure Nome"))
        self.profiloButton.setText(_translate("MainWindow", "Vai a profilo"))

    def methodVisualizzaListaTest(self):
        controllerPickle = ControllerPickle()
        controllerPickle.caricaListaTest()
        listaTest = controllerPickle.listaTest

        row = 0
        self.tableWidget.setRowCount(len(listaTest))
        for i in listaTest:
            identifierColumn = QtWidgets.QTableWidgetItem(str(i.getIdentifier())) 
            identifierColumn.setFlags(identifierColumn.flags() ^ QtCore.Qt.ItemIsEditable)
            self.tableWidget.setItem(row, 0, identifierColumn)

            nomeColumn = QtWidgets.QTableWidgetItem(i.getNome()) 
            nomeColumn.setFlags(nomeColumn.flags() ^ QtCore.Qt.ItemIsEditable)
            self.tableWidget.setItem(row, 1, nomeColumn)

            dataCreazioneColumn = QtWidgets.QTableWidgetItem(str(i.getDataCreazione())) 
            dataCreazioneColumn.setFlags(dataCreazioneColumn.flags() ^ QtCore.Qt.ItemIsEditable)
            self.tableWidget.setItem(row, 2, dataCreazioneColumn)

            bottoneModifica = QtWidgets.QPushButton("Modifica")
            bottoneModifica.clicked.connect(lambda: self.goToModificaTestView(i))
            self.tableWidget.setCellWidget(row, 3, bottoneModifica)

            bottoneElimina = QtWidgets.QPushButton("Elimina")
            bottoneElimina.clicked.connect(lambda: self.actionEliminaTest(i.identifier))
            self.tableWidget.setCellWidget(row, 4, bottoneElimina)
            row = row+1

    def goToModificaTestView(self, testDaModificare):
        self.modificaTest = QtWidgets.QMainWindow()
        self.ui = ModificaTestView()
        self.ui.setupUi(self.modificaTest, testDaModificare)
        self.modificaTest.show()
    
    def actionEliminaTest(self, identifier):
        controllerTest = ControllerTest()
        self.deleted = controllerTest.eliminaTest(identifier)
        self.controllaTestEliminatoConSuccesso()
        
    def controllaTestEliminatoConSuccesso(self):
        if self.deleted==True:
            registrazioneOK = QMessageBox()
            registrazioneOK.setWindowTitle("OK")
            registrazioneOK.setText("Test eliminato con successo!")
            registrazioneOK.exec_()
        else:
            registrazioneNonOK = QMessageBox()
            registrazioneNonOK.setWindowTitle("Errore!")
            registrazioneNonOK.setText("Test non eliminato!")
            registrazioneNonOK.exec_()

    def goToAggiungiTestView(self):
        self.aggiungiTest = QtWidgets.QMainWindow()
        self.ui = AggiungiTestView()
        self.ui.setupUi(self.aggiungiTest)
        self.aggiungiTest.show()

    def actionVisualizzaListaTest(self):
        try:
            self.methodVisualizzaListaTest()
        except Exception as e:
            print(e)
     