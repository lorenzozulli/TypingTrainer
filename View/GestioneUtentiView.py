# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'GestioneUtentiView.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from Controller.ControllerUtente import ControllerUtente
from Controller.ControllerPickle import ControllerPickle
from View.ModificaUtenteView import ModificaUtenteView
from PyQt5.QtWidgets import *

class GestioneUtentiView(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 800)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.label1 = QtWidgets.QLabel(self.centralwidget)
        self.label1.setGeometry(QtCore.QRect(0, 10, 351, 121))
        font = QtGui.QFont()
        font.setPointSize(36)
        self.label1.setFont(font)
        self.label1.setAcceptDrops(False)
        self.label1.setWordWrap(True)
        self.label1.setObjectName("label1")
        self.tableWidget = QtWidgets.QTableWidget(self.centralwidget)
        self.tableWidget.setGeometry(QtCore.QRect(20, 210, 731, 561))
        self.tableWidget.setObjectName("tableWidget")
        self.tableWidget.setColumnCount(5)
        self.tableWidget.setRowCount(0)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(0, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(1, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(2, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(3, item)
        item = QtWidgets.QTableWidgetItem()
        self.tableWidget.setHorizontalHeaderItem(4, item)
        self.tableWidget.setColumnWidth(1,300)

        self.cercaButton = QtWidgets.QPushButton(self.centralwidget)
        self.cercaButton.setGeometry(QtCore.QRect(380, 170, 75, 30))
        self.cercaButton.setObjectName("cercaButton")

        self.searchBarInput = QtWidgets.QLineEdit(self.centralwidget)
        self.searchBarInput.setGeometry(QtCore.QRect(20, 170, 350, 30))
        self.searchBarInput.setObjectName("searchBarInput")
        self.profiloButton = QtWidgets.QToolButton(self.centralwidget)
        self.profiloButton.setGeometry(QtCore.QRect(650, 30, 101, 71))
        self.profiloButton.setObjectName("profiloButton")
        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label1.setText(_translate("MainWindow", "Benvenuto in Typing Trainer!"))
        item = self.tableWidget.horizontalHeaderItem(0)
        item.setText(_translate("MainWindow", "ID"))
        item = self.tableWidget.horizontalHeaderItem(1)
        item.setText(_translate("MainWindow", "Nome"))
        item = self.tableWidget.horizontalHeaderItem(2)
        item.setText(_translate("MainWindow", "Data Creazione"))
        item = self.tableWidget.horizontalHeaderItem(3)
        item.setText(_translate("MainWindow", "Modifica"))
        item = self.tableWidget.horizontalHeaderItem(4)
        item.setText(_translate("MainWindow", "Elimina"))
        self.cercaButton.setText(_translate("MainWindow", "Cerca"))
        self.searchBarInput.setText(_translate("MainWindow", ""))
        self.searchBarInput.setPlaceholderText(_translate("MainWindow", "Inserisci ID oppure Nome"))
        self.profiloButton.setText(_translate("MainWindow", "Vai a profilo"))

    def aggiornaPagina(self):
        self.actionVisualizzaListaUtenti()

    def actionVisualizzaListaUtenti(self):
        try:
            self.methodVisualizzaListaUtenti()
        except Exception as e:
            print(e)

    def methodVisualizzaListaUtenti(self):
        controllerPickle = ControllerPickle()
        controllerPickle.caricaListaUtilizzatori()
        listaUtilizzatori = controllerPickle.listaUtilizzatori

        row = 0
        self.tableWidget.setRowCount(len(listaUtilizzatori))
        for i in listaUtilizzatori:
            identifierColumn = QtWidgets.QTableWidgetItem(str(i.identifier)) 
            identifierColumn.setFlags(identifierColumn.flags() ^ QtCore.Qt.ItemIsEditable)
            self.tableWidget.setItem(row, 0, identifierColumn)

            usernameColumn = QtWidgets.QTableWidgetItem(i.getUsername()) 
            usernameColumn.setFlags(usernameColumn.flags() ^ QtCore.Qt.ItemIsEditable)
            self.tableWidget.setItem(row, 1, usernameColumn)
            if i.identifier != 0:
                dataCreazioneColumn = QtWidgets.QTableWidgetItem(str(i.getDataCreazione())) 
                dataCreazioneColumn.setFlags(dataCreazioneColumn.flags() ^ QtCore.Qt.ItemIsEditable)
                self.tableWidget.setItem(row, 2, dataCreazioneColumn)

                self.bottoneModifica = QtWidgets.QPushButton("Modifica")
                self.bottoneModifica.clicked.connect(lambda _, user=i: self.goToModificaUtenteView(user))
                self.tableWidget.setCellWidget(row, 3, self.bottoneModifica)

                self.bottoneElimina = QtWidgets.QPushButton("Elimina")
                self.bottoneElimina.clicked.connect(lambda _, user=i: self.actionEliminaUtente(user.getIdentifier()))
                self.tableWidget.setCellWidget(row, 4, self.bottoneElimina)
            else:
                dataCreazioneColumn = QtWidgets.QTableWidgetItem(" ")
                dataCreazioneColumn.setFlags(dataCreazioneColumn.flags() ^ QtCore.Qt.ItemIsEditable)
                self.tableWidget.setItem(row, 2, dataCreazioneColumn)

                self.bottoneModifica = QtWidgets.QTableWidgetItem(" ")
                self.bottoneModifica.setFlags(self.bottoneModifica.flags() ^ QtCore.Qt.ItemIsEditable)
                self.tableWidget.setItem(row, 3, self.bottoneModifica)

                self.bottoneElimina = QtWidgets.QTableWidgetItem(" ")
                self.bottoneElimina.setFlags(self.bottoneElimina.flags() ^ QtCore.Qt.ItemIsEditable)
                self.tableWidget.setItem(row, 4, self.bottoneElimina)
            row = row+1

    def goToModificaUtenteView(self, utenteDaModificare):
        self.modificaUtenteView = QtWidgets.QMainWindow()
        self.ui = ModificaUtenteView()
        self.ui.setupUi(self.modificaUtenteView, utenteDaModificare)
        self.modificaUtenteView.show()

        self.ui.ModificaButton.clicked.connect(self.aggiornaPagina)

    def actionEliminaUtente(self, identifier):
        controllerUtente = ControllerUtente()
        self.deleted = controllerUtente.eliminaUtente(identifier)
        self.controllaUtenteEliminatoConSuccesso()

        #self.bottoneElimina.clicked.connect(lambda: self.aggiornaPagina) #TODO: sistemare qui


    def controllaUtenteEliminatoConSuccesso(self):
        if self.deleted==True:
            registrazioneOK = QMessageBox()
            registrazioneOK.setWindowTitle("OK")
            registrazioneOK.setText("Utente eliminato con successo!")
            registrazioneOK.exec_()
        else:
            registrazioneNonOK = QMessageBox()
            registrazioneNonOK.setWindowTitle("Errore!")
            registrazioneNonOK.setText("Utente non eliminato!")
            registrazioneNonOK.exec_()