# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '.\iniziaTest.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtCore import Qt
from View.VisualizzaStatisticheView import VisualizzaStatisticheView

import time
import threading

class IniziaTestView(object):

    def setupUi(self, MainWindow, currentUtilizzatore, testSelezionato):
        self.currentUtilizzatore = currentUtilizzatore
        self.testSelezionato = testSelezionato
        self.timeCounter = 0
        self.running = False
        self.errorCounter = 0
        self.correctCharacter = 0

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(800, 800)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.TimerLabel = QtWidgets.QLabel(self.centralwidget)
        self.TimerLabel.setGeometry(QtCore.QRect(325, 100, 141, 90))
        font = QtGui.QFont()
        font.setPointSize(55)
        self.TimerLabel.setFont(font)
        self.TimerLabel.setObjectName("TimerLabel")

        self.TestDisplayLabel = QtWidgets.QLabel(self.centralwidget)
        self.TestDisplayLabel.setGeometry(QtCore.QRect(90, 260, 600, 180))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.TestDisplayLabel.setFont(font)
        self.TestDisplayLabel.setObjectName("TestDisplayLabel")
        self.TestDisplayLabel.setWordWrap(True)

        self.WordInputLineEdit = QtWidgets.QLineEdit(self.centralwidget)
        self.WordInputLineEdit.setGeometry(QtCore.QRect(90, 500, 600, 40))
        font = QtGui.QFont()
        font.setPointSize(16)
        self.WordInputLineEdit.setFont(font)
        self.WordInputLineEdit.setObjectName("WordInputLineEdit")
        self.WordInputLineEdit.setFocusPolicy(Qt.StrongFocus)
        self.WordInputLineEdit.textChanged.connect(self.start)

        self.PauseButton = QtWidgets.QPushButton(self.centralwidget)
        self.PauseButton.setGeometry(QtCore.QRect(310, 560, 150, 30))
        self.PauseButton.setObjectName("PauseButton")
        self.PauseButton.clicked.connect(self.reset)

        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 800, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)

        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.TimerLabel.setText(_translate("MainWindow", '0'))
        self.TestDisplayLabel.setText(_translate("MainWindow", ''))
        self.PauseButton.setText(_translate("MainWindow", "Reset"))
        self.WordInputLineEdit.setPlaceholderText(_translate("MainWindow", "Inizia a scrivere per avviare il test!"))

    def actionRenderizzaTest(self):
        self.testRandomizzato = self.testSelezionato.shuffleTest()
        self.TestDisplayLabel.setText(self.testSelezionato.shuffleTest())
    
    def start(self):
        if not self.running:
            self.running = True
            time = threading.Thread(target=self.timeThread)
            time.start()
        
        if not self.TestDisplayLabel.text().startswith(self.WordInputLineEdit.text()):
            self.WordInputLineEdit.setStyleSheet('color: red;')
            self.errorCounter = self.errorCounter + 1
        else:
            self.WordInputLineEdit.setStyleSheet('color: black;')
            self.correctCharacter = self.correctCharacter + 1

        if self.WordInputLineEdit.text() == self.TestDisplayLabel.text():
            self.running = False
            self.TestDisplayLabel.setStyleSheet('color: green;')
            self.WordInputLineEdit.setStyleSheet('color: green;')
            self.goToVisualizzaStatisticheView()
    
    def timeThread(self):
        while self.running:
            time.sleep(0.1)
            self.timeCounter = self.timeCounter + 0.1
            self.TimerLabel.setText(str(self.timeCounter))

    def reset(self):
        self.running = False
        self.timeCounter = 0
        self.TimerLabel.setText('0')
        self.WordInputLineEdit.clear()
        self.WordInputLineEdit.setFocusPolicy(Qt.StrongFocus)

    def goToVisualizzaStatisticheView(self):
        try:
            self.visualizzaStatisticheView = QtWidgets.QMainWindow()
            self.ui = VisualizzaStatisticheView()
            self.ui.setupUi(self.visualizzaStatisticheView, self.currentUtilizzatore, self.errorCounter, self.testSelezionato, self.timeCounter, self.correctCharacter)
            self.ui.actionCalcolaAndAggiornaTotaleTestEseguiti()
            self.ui.actionCalcolaAndAggiornaMediaNumeroParolePerMinuto()
            self.ui.actionCacolaAndAggiornaPrecisioneMedia()
            self.visualizzaStatisticheView.show()
        except Exception as e:
            print(e)


